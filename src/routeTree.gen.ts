/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DepositRouteImport } from './routes/deposit'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as authRegisterRouteImport } from './routes/(auth)/Register'
import { Route as authLoginRouteImport } from './routes/(auth)/Login'

const DepositRoute = DepositRouteImport.update({
  id: '/deposit',
  path: '/deposit',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const authRegisterRoute = authRegisterRouteImport.update({
  id: '/(auth)/Register',
  path: '/Register',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/Login',
  path: '/Login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/deposit': typeof DepositRoute
  '/Login': typeof authLoginRoute
  '/Register': typeof authRegisterRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/deposit': typeof DepositRoute
  '/Login': typeof authLoginRoute
  '/Register': typeof authRegisterRoute
  '/dashboard': typeof DashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/deposit': typeof DepositRoute
  '/(auth)/Login': typeof authLoginRoute
  '/(auth)/Register': typeof authRegisterRoute
  '/dashboard/': typeof DashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/deposit' | '/Login' | '/Register' | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/deposit' | '/Login' | '/Register' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/deposit'
    | '/(auth)/Login'
    | '/(auth)/Register'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DepositRoute: typeof DepositRoute
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/deposit': {
      id: '/deposit'
      path: '/deposit'
      fullPath: '/deposit'
      preLoaderRoute: typeof DepositRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/Register': {
      id: '/(auth)/Register'
      path: '/Register'
      fullPath: '/Register'
      preLoaderRoute: typeof authRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/Login': {
      id: '/(auth)/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DepositRoute: DepositRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
